#!/usr/bin/env bash

set -e

# Use Docker BuildKit to efficiently build the targets.
# With BuildKit, only relevant layers for the target are built.
export DOCKER_BUILDKIT=1
DEBUG=false

while true ; do
  case "$1" in
    --debug ) DEBUG=true ; shift ;;
     * ) if [ -z "$1" ]; then break; else echo "$1 is not a valid option"; exit 1; fi;;
  esac
done

# go to repo root folder for execution
cd $(dirname $0)/..

. bin/build_utils

VERSION=unreleased
# Version derived from CHANGELOG and automated release library
[ -f VERSION ] && VERSION=$(<VERSION)
FULL_VERSION_TAG="$VERSION-$(git_tag)"

echo "---"

function main() {
  retrieve_cyberark_ca_cert
  build_docker_image
}

function build_docker_image() {

  if [ $DEBUG = true ]; then
    echo "Building secrets-provider-debug Docker image"

    docker build \
      --build-arg TAG="debug" \
      --tag "secrets-provider-for-k8s-debug:latest" \
      --target "secrets-provider-debug" \
      .
  else
    echo "Building secrets-provider-for-k8s:$FULL_VERSION_TAG Docker image"

    docker build \
      --build-arg TAG=$(git_tag) \
      --tag "dockerhub.kb.cz/ps-sq002/speed/secrets-provider-for-k8s:1.0.0-SNAPSHOT" \
      --target "secrets-provider" \
      .

    echo "Building secrets-provider-for-k8s-redhat:$FULL_VERSION_TAG Docker image"

    docker build \
       --build-arg TAG=$(git_tag) \
       --build-arg VERSION="$FULL_VERSION_TAG" \
       --tag "secrets-provider-for-k8s-redhat:${FULL_VERSION_TAG}" \
       --tag "secrets-provider-for-k8s-redhat:latest" \
       --target "secrets-provider-for-k8s-redhat" \
       .
  fi

  echo "---"

}

main
